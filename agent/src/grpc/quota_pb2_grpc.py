# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import quota_pb2 as quota__pb2

GRPC_GENERATED_VERSION = '1.71.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in quota_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class AuthorizationStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.LoginUser = channel.unary_unary(
                '/quota.Authorization/LoginUser',
                request_serializer=quota__pb2.AccountRequest.SerializeToString,
                response_deserializer=quota__pb2.LoginUserResponse.FromString,
                _registered_method=True)
        self.CreateUser = channel.unary_unary(
                '/quota.Authorization/CreateUser',
                request_serializer=quota__pb2.CreateUserRequest.SerializeToString,
                response_deserializer=quota__pb2.CreateUserResponse.FromString,
                _registered_method=True)


class AuthorizationServicer(object):
    """Missing associated documentation comment in .proto file."""

    def LoginUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUser(self, request, context):
        """Создание пользователя в системе, установка квоты на данного пользователя
        добавление в базу данных mysql нового пользователя с принадлежащей только ему базой данных
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AuthorizationServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'LoginUser': grpc.unary_unary_rpc_method_handler(
                    servicer.LoginUser,
                    request_deserializer=quota__pb2.AccountRequest.FromString,
                    response_serializer=quota__pb2.LoginUserResponse.SerializeToString,
            ),
            'CreateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUser,
                    request_deserializer=quota__pb2.CreateUserRequest.FromString,
                    response_serializer=quota__pb2.CreateUserResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'quota.Authorization', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('quota.Authorization', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Authorization(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def LoginUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/quota.Authorization/LoginUser',
            quota__pb2.AccountRequest.SerializeToString,
            quota__pb2.LoginUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/quota.Authorization/CreateUser',
            quota__pb2.CreateUserRequest.SerializeToString,
            quota__pb2.CreateUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class QuotaServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateStudent = channel.unary_unary(
                '/quota.QuotaService/CreateStudent',
                request_serializer=quota__pb2.CreateStudentRequest.SerializeToString,
                response_deserializer=quota__pb2.CreateStudentResponse.FromString,
                _registered_method=True)
        self.UploadUserApp = channel.stream_unary(
                '/quota.QuotaService/UploadUserApp',
                request_serializer=quota__pb2.UploadUserAppRequest.SerializeToString,
                response_deserializer=quota__pb2.UploadUserAppResponse.FromString,
                _registered_method=True)
        self.StartContainer = channel.unary_unary(
                '/quota.QuotaService/StartContainer',
                request_serializer=quota__pb2.StartContainerRequest.SerializeToString,
                response_deserializer=quota__pb2.StartContainerResponse.FromString,
                _registered_method=True)
        self.GetUserQuota = channel.unary_unary(
                '/quota.QuotaService/GetUserQuota',
                request_serializer=quota__pb2.GetUserQuotaRequest.SerializeToString,
                response_deserializer=quota__pb2.GetUserQuotaResponse.FromString,
                _registered_method=True)


class QuotaServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateStudent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UploadUserApp(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartContainer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserQuota(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QuotaServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateStudent': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateStudent,
                    request_deserializer=quota__pb2.CreateStudentRequest.FromString,
                    response_serializer=quota__pb2.CreateStudentResponse.SerializeToString,
            ),
            'UploadUserApp': grpc.stream_unary_rpc_method_handler(
                    servicer.UploadUserApp,
                    request_deserializer=quota__pb2.UploadUserAppRequest.FromString,
                    response_serializer=quota__pb2.UploadUserAppResponse.SerializeToString,
            ),
            'StartContainer': grpc.unary_unary_rpc_method_handler(
                    servicer.StartContainer,
                    request_deserializer=quota__pb2.StartContainerRequest.FromString,
                    response_serializer=quota__pb2.StartContainerResponse.SerializeToString,
            ),
            'GetUserQuota': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserQuota,
                    request_deserializer=quota__pb2.GetUserQuotaRequest.FromString,
                    response_serializer=quota__pb2.GetUserQuotaResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'quota.QuotaService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('quota.QuotaService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class QuotaService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateStudent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/quota.QuotaService/CreateStudent',
            quota__pb2.CreateStudentRequest.SerializeToString,
            quota__pb2.CreateStudentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UploadUserApp(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(
            request_iterator,
            target,
            '/quota.QuotaService/UploadUserApp',
            quota__pb2.UploadUserAppRequest.SerializeToString,
            quota__pb2.UploadUserAppResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StartContainer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/quota.QuotaService/StartContainer',
            quota__pb2.StartContainerRequest.SerializeToString,
            quota__pb2.StartContainerResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUserQuota(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/quota.QuotaService/GetUserQuota',
            quota__pb2.GetUserQuotaRequest.SerializeToString,
            quota__pb2.GetUserQuotaResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
